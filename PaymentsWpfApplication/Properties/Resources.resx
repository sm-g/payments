<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlSexMan" xml:space="preserve">
    <value>Муж</value>
  </data>
  <data name="ControlSexNotAppl" xml:space="preserve">
    <value>нет</value>
  </data>
  <data name="ControlSexUnknown" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="ControlSexWoman" xml:space="preserve">
    <value>Жен</value>
  </data>
  <data name="EditorAddress" xml:space="preserve">
    <value>Адрес</value>
  </data>
  <data name="EditorBenefit" xml:space="preserve">
    <value>Льгота</value>
  </data>
  <data name="EditorBirthDate" xml:space="preserve">
    <value>Дата рождения</value>
  </data>
  <data name="EditorBuilding" xml:space="preserve">
    <value>Строение</value>
  </data>
  <data name="EditorCommonArea" xml:space="preserve">
    <value>Площадь</value>
  </data>
  <data name="EditorDate" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="EditorFirstName" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="EditorFlat" xml:space="preserve">
    <value>Квартира</value>
  </data>
  <data name="EditorHouse" xml:space="preserve">
    <value>Дом</value>
  </data>
  <data name="EditorID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="EditorLastName" xml:space="preserve">
    <value>Фамилия</value>
  </data>
  <data name="EditorLivArea" xml:space="preserve">
    <value>Площадь жилая</value>
  </data>
  <data name="EditorLivMen" xml:space="preserve">
    <value>Проживает</value>
  </data>
  <data name="EditorLogin" xml:space="preserve">
    <value>Логин</value>
  </data>
  <data name="EditorMeter" xml:space="preserve">
    <value>Счётчик</value>
  </data>
  <data name="EditorMiddleName" xml:space="preserve">
    <value>Отчество</value>
  </data>
  <data name="EditorName" xml:space="preserve">
    <value>Название</value>
  </data>
  <data name="EditorNumber" xml:space="preserve">
    <value>Номер</value>
  </data>
  <data name="EditorPassword" xml:space="preserve">
    <value>Пароль</value>
  </data>
  <data name="EditorPayer" xml:space="preserve">
    <value>Плательщик</value>
  </data>
  <data name="EditorPaymentFinish" xml:space="preserve">
    <value>Конец оплаты</value>
  </data>
  <data name="EditorPaymentStart" xml:space="preserve">
    <value>Начало оплаты</value>
  </data>
  <data name="EditorReading" xml:space="preserve">
    <value>Показание</value>
  </data>
  <data name="EditorRegistration" xml:space="preserve">
    <value>Регистрация</value>
  </data>
  <data name="EditorSettlement" xml:space="preserve">
    <value>Населённый пункт</value>
  </data>
  <data name="EditorSex" xml:space="preserve">
    <value>Пол</value>
  </data>
  <data name="EditorShortName" xml:space="preserve">
    <value>Сокращение</value>
  </data>
  <data name="EditorStreet" xml:space="preserve">
    <value>Улица</value>
  </data>
  <data name="EditorSuffix" xml:space="preserve">
    <value>Суффикс</value>
  </data>
  <data name="EditorTotalArea" xml:space="preserve">
    <value>Площадь общая</value>
  </data>
  <data name="EditorType" xml:space="preserve">
    <value>Тип</value>
  </data>
  <data name="EditorUnit" xml:space="preserve">
    <value>Ед. изм.</value>
  </data>
  <data name="EditorUser" xml:space="preserve">
    <value>Пользователь</value>
  </data>
  <data name="EditorUserGroup" xml:space="preserve">
    <value>Группа</value>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>Не удалось выполнить операцию</value>
  </data>
  <data name="LoginLogOn" xml:space="preserve">
    <value>Войти</value>
  </data>
  <data name="LoginPassword" xml:space="preserve">
    <value>Пароль</value>
  </data>
  <data name="LoginTitle" xml:space="preserve">
    <value>Учёт квартплаты</value>
  </data>
  <data name="LoginUsername" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="ErrorNoUsername" xml:space="preserve">
    <value>Нет такого пользователя</value>
  </data>
  <data name="ShortBuilding" xml:space="preserve">
    <value>стр.</value>
  </data>
  <data name="ShortFlat" xml:space="preserve">
    <value>кв.</value>
  </data>
  <data name="ShortHouse" xml:space="preserve">
    <value>д.</value>
  </data>
  <data name="ErrorWrongPassword" xml:space="preserve">
    <value>Введите верный пароль</value>
  </data>
  <data name="ErrorFieldLength" xml:space="preserve">
    <value>Лишние символы в поле</value>
  </data>
  <data name="EditorFlatType" xml:space="preserve">
    <value>Тип квартиры</value>
  </data>
  <data name="EditorNorm" xml:space="preserve">
    <value>Норматив</value>
  </data>
  <data name="EditorPaymentTargetDate" xml:space="preserve">
    <value>За месяц</value>
  </data>
  <data name="EditorPrice" xml:space="preserve">
    <value>Цена</value>
  </data>
  <data name="EditorPriceAbove" xml:space="preserve">
    <value>Цена сверх</value>
  </data>
  <data name="EditorRateEnd" xml:space="preserve">
    <value>Дата окончания</value>
  </data>
  <data name="EditorRateStart" xml:space="preserve">
    <value>Дата введения</value>
  </data>
  <data name="EditorService" xml:space="preserve">
    <value>Услуга</value>
  </data>
  <data name="EditorSum" xml:space="preserve">
    <value>Сумма</value>
  </data>
</root>